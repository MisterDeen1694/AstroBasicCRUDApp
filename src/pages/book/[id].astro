---
import AuthorPill from "@/components/AuthorPill.astro";
import ReadingSelect from "@/components/ReadingSelect.astro";
import BaseLayout from "@/layout/BaseLayout.astro";
import { TBook } from "@/types/Books";
import { db, Book, eq } from "astro:db";

const { id } = Astro.params;

if (!id) {
	return Astro.redirect("/");
}

const books = await db.select().from(Book).where(eq(Book.id, id));

if (books.length === 0) {
	return Astro.redirect("/");
}

const { author, cover, id: bookId, status, title } = books[0] as TBook;
---

<BaseLayout title={title}>
	<div class="grid-md">
		<div class="book-layout">
			<img src={cover} alt={title} width="225" height="255" />
			<div class="grid-sm">
				<h1>{title}</h1>
				<AuthorPill author={author} />
				<ReadingSelect selectData={{ status, id: bookId }} />
			</div>
		</div>
		<button class="remove-book-button btn warning" data-id={bookId}
			>Remove from Libary</button
		>
	</div>
</BaseLayout>

<script>
	const removeButton = document.querySelector(
		".remove-book-button"
	) as HTMLButtonElement;

	removeButton.addEventListener("click", async (e) => {
		try {
			const res = await fetch(
				`/api/books/${removeButton.dataset.id}.json`,
				{
					method: "DELETE",
				}
			);

			if (!res.ok) {
				throw new Error("Failed to delete book. Please try again");
			}

			const { data, error } = await res.json();

			if (error) {
				throw new Error(error);
			}

			window.location.href = "/";
		} catch (error) {
			console.error(error);
			alert(error instanceof Error ? error.message : "Unknown error.");
		}
	});
</script>
